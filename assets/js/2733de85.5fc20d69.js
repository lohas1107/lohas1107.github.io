"use strict";(self.webpackChunk_2_ndbrain=self.webpackChunk_2_ndbrain||[]).push([[8019],{438:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=t(5893),r=t(1151);const s={},d="153. Find Minimum in Rotated Sorted Array",o={id:"leetcode/find-minimum-in-rotated-sorted-array",title:"153. Find Minimum in Rotated Sorted Array",description:"input: nums",source:"@site/docs/leetcode/0153-find-minimum-in-rotated-sorted-array.md",sourceDirName:"leetcode",slug:"/leetcode/find-minimum-in-rotated-sorted-array",permalink:"/docs/leetcode/find-minimum-in-rotated-sorted-array",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/leetcode/0153-find-minimum-in-rotated-sorted-array.md",tags:[],version:"current",sidebarPosition:153,frontMatter:{},sidebar:"leetcodeSidebar",previous:{title:"136. Single Number",permalink:"/docs/leetcode/single-number"},next:{title:"160. Intersection of Two Linked Lists",permalink:"/docs/leetcode/intersection-of-two-linked-lists"}},a={},c=[{value:"Testcase",id:"testcase",level:3},{value:"Binary Search",id:"binary-search",level:3}];function l(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"153-find-minimum-in-rotated-sorted-array",children:"153. Find Minimum in Rotated Sorted Array"}),"\n",(0,i.jsx)(n.p,{children:"input: nums\noutput: int"}),"\n",(0,i.jsxs)(n.p,{children:["rotated sorted array: ",(0,i.jsx)(n.code,{children:"nums[n-1] < nums[0]"})]}),"\n",(0,i.jsx)(n.h3,{id:"testcase",children:"Testcase"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"[2,3,4,5,6,7,1]"}),"\n",(0,i.jsx)(n.li,{children:"[1,2,3,4,5,6,7]"}),"\n",(0,i.jsx)(n.li,{children:"[7,1,2,3,4,5,6]"}),"\n",(0,i.jsx)(n.li,{children:"[5,6,7,1,2,3,4]"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"binary-search",children:"Binary Search"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def findMin(self, nums: List[int]) -> int:\n        \n        left=0\n        right=len(nums)-1\n\n        while left<right:\n            mid=(right-left)//2\n            if nums[mid]>nums[right]:\n                left=mid+1\n            else:\n                right=mid\n\n        return nums[right]\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["why return the num at the ",(0,i.jsx)(n.code,{children:"right"})," index?"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>d});var i=t(7294);const r={},s=i.createContext(r);function d(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);