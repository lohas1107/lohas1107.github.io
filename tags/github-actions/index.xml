<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>github-actions on 第二大腦</title><link>https://2ndbrain.cc/tags/github-actions/</link><description>Recent content in github-actions on 第二大腦</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Sun, 11 Jul 2021 16:40:00 +0800</lastBuildDate><atom:link href="https://2ndbrain.cc/tags/github-actions/index.xml" rel="self" type="application/rss+xml"/><item><title>建置 Gulp 前端自動化整合工具</title><link>https://2ndbrain.cc/posts/2021/07/setup-gulp/</link><pubDate>Sun, 11 Jul 2021 16:40:00 +0800</pubDate><guid>https://2ndbrain.cc/posts/2021/07/setup-gulp/</guid><description>&lt;p>最近幫切版專案建置一整套 CI/CD 自動化流程，以後只要 push 到 &lt;code>main&lt;/code> branch 上，
就會自動部署到 GitHub Pages，終於不用自己手動合併到 &lt;code>gh-pages&lt;/code> branch 再 push 囉～&lt;/p>
&lt;h1 id="安裝-gulp-cli">安裝 gulp CLI&lt;/h1>
&lt;p>因為 yarn &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> 的執行效能比 npm &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> 好，所以就決定用 Homebrew 安裝 yarn &lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> 來管理套件。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">brew install yarn
&lt;/code>&lt;/pre>&lt;/div>&lt;p>使用 yarn 安裝 gulp &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">yarn global add gulp-cli
&lt;/code>&lt;/pre>&lt;/div>&lt;p>查看 gulp CLI 是否安裝成功。&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">gulp -v
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">CLI version: 2.3.0
Local version: Unknown
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>排程執行 Cucumber 測試</title><link>https://2ndbrain.cc/posts/2021/05/separate-cucumber-test/</link><pubDate>Sun, 02 May 2021 00:30:02 +0800</pubDate><guid>https://2ndbrain.cc/posts/2021/05/separate-cucumber-test/</guid><description>&lt;h1 id="何時執行整合測試">何時執行整合測試？&lt;/h1>
&lt;p>通常整合測試執行時間比單元測試長很多，也因為整合測試的執行頻率無法像單元測試一樣頻繁，比較適合每日排程執行。
為了在進行開發而頻繁執行測試時，不需要等待整合測試執行，所以特別將整合測試獨立成一個 Source Set，不和單元測試程式放在一起。&lt;/p>
&lt;p>另一種方式是將整合測試獨立成一個專案，在 Gradle 設定上應該會比較簡單 XD。
以下說明是針對比較搞剛的 Gradle Source Set &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>。&lt;/p></description></item><item><title>Hugo 教學 -- 進階篇</title><link>https://2ndbrain.cc/posts/2021/04/get-advanced-hugo/</link><pubDate>Sat, 17 Apr 2021 00:19:16 +0800</pubDate><guid>https://2ndbrain.cc/posts/2021/04/get-advanced-hugo/</guid><description>&lt;p>本篇利用 Hugo 建立個人化網站，基本應用參考 Hugo 系列文：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://2ndbrain.cc/posts/2021/04/get-started-hugo/">Hugo 教學 &amp;ndash; 基礎篇&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://2ndbrain.cc/posts/2021/04/get-advanced-hugo/">Hugo 教學 &amp;ndash; 進階篇&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="custom-domain">Custom Domain&lt;/h1>
&lt;ol>
&lt;li>在 &lt;a href="https://tw.godaddy.com/">GoDaddy&lt;/a> 購買屬於自己的網域，例如：&lt;code>2ndbrain.cc&lt;/code>&lt;/li>
&lt;li>在 Terminal 用指令 &lt;code>dig&lt;/code> 查詢個人 GitHub Pages 的 IP
&lt;div class="highlight">&lt;pre style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">dig {YOUR_USER_NAME}.github.io
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>在 &lt;a href="https://dcc.godaddy.com/domains">GoDaddy&lt;/a> 設定 IP 和 轉址 Domain&lt;/li>
&lt;li>在 Repository &lt;code>{YOUR_USER_NAME}.github.io&lt;/code> 的 &lt;code>Settings &amp;gt;&amp;gt; Pages&lt;/code> 設定 Custom domain&lt;/li>
&lt;li>在 Repository &lt;code>{YOUR_USER_NAME}.github.io&lt;/code> 的根目錄加入 &lt;code>CNAME&lt;/code> 檔案
&lt;div class="highlight">&lt;pre style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">&lt;span style="color:#cb4b16">echo&lt;/span> &lt;span style="color:#2aa198">&amp;#39;YOUR_DOMAIN&amp;#39;&lt;/span> &amp;gt;&amp;gt; CNAME
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-zsh" data-lang="zsh">&lt;span style="color:#cb4b16">echo&lt;/span> &lt;span style="color:#2aa198">&amp;#39;2ndbrain.cc&amp;#39;&lt;/span> &amp;gt;&amp;gt; CNAME
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item></channel></rss>